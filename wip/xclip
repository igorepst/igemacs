(defun kdm/html2org-clipboard ()
  "Convert clipboard contents from HTML to Org and then paste (yank)."
  (interactive)
  (kill-new (shell-command-to-string "xclip -o -t text/html | pandoc -f html -t json | pandoc -f json -t org"))
  (yank))


element 19:  t
element 20:  u
element 21:  v
element 22:  w
element 23:  x
element 24:  y
element 25:  z

You need to use setcar and nthcdr:

(setcar (nthcdr 17 the-list) my-variable)


You need to use [[http://www.gnu.org/software/emacs/manual/html_node/elisp/Setcar.html][=setcar=]] and [[http://www.gnu.org/software/emacs/manual/html_node/eintr/nthcdr.html][=nthcdr=]]:

#+BEGIN_EXAMPLE
    (setcar (nthcdr 17 the-list) my-variable)
#+END_EXAMPLE

(shell-command-to-string "xclip -o -t text/html 2>/dev/null")
(kill-new (shell-command-to-string "xclip -o -t text/html"))
(yank)l data, th
l data, th


(shell-command-to-string "git rev-parse --show-toplevel")

(message "output is %S"
(with-temp-buffer
  (call-process-shell-command "xclip -o -t text/html | pandoc -f html -t json | pandoc -f json -t org" nil t)
  (buffer-string))
)

(with-temp-buffer
  (list (call-process "xclip" nil (current-buffer) nil "-o" "-t" "text/html")
        (buffer-string)))
(defun sent (p e)
  (message "status is %S, process is %S" e p)
  (when (string-match-p "finished" e) (kill-process p))
  )

(message "out is %s"
(with-temp-buffer
(let ((process (start-process-shell-command "xclip-to-org" (current-buffer) "xclip -o -t text/html | pandoc -f html -t json | pandoc -f json -t org")) )
  (set-process-sentinel process #'sent))
(buffer-string)))
